import java.util.*;
/**
 * The Critter class is the class that creates the actual critter.
 *
 * @author Laura Wong
 * @version 3 05.29.15
 * 
 * <p>
 * <b>name: Critter.java </b>
 *
 * <p>
 * <b>Instance variables: </b>
 * <p>
 * <b>stomach</b>An ArrayList of Food objects that stores the food that the critter is fed.
 * <p>
 * <b>fullness[]</b>An array of 3 integers that stores the fullness level of the critter for each of the three meals.
 * <p>
 * <b>foodGroupCount[][]</b>A 2D array of 3 rows and 5 columns that stores the total nutrient value of a certain food group consumed for a certain meal.
 * <p>
 * <b>colour</b> This String variable is used to store the critter's colour.
 * <p>
 * <b>growthStage </b> This int variable is used to store the level of growth the critter is at currently.
 * <p>
 * <b>isHealthy </b> This boolean variable is used to see if the critter is healthy or not.
 */
public class Critter
{
  private ArrayList<Food>stomach=new ArrayList<Food>();
  private int []fullness=new int [3];
  private int [][]foodGroupCount=new int [3][5];
  private String colour;
  private int growthStage;
  private boolean isHealthy = true;
  
  /**
   * The Critter constructor creates a critter sitter with the specified colour.
   * 
   * @param colour This String variable is used to store the critter's colour.
   */
  public Critter (String colour)
  {
    this.colour = colour;
  }
  
  /**
   * The calcPercentage method calculates the percentage of consumption for a foodGroup compared to the their fullness for the meal.
   * 
   * <p>
   * <b>Local Variable Dictionary: </b>
   * <p>
   * <b> percentage </b> The double value of the percentage of the foodGroupCount to the total fullness.
   * 
   * @param meal is the integer that stores the meal number where 0 is breakfast, 1 is lunch and 2 is dinner.
   * @param foodGroup is the integer that stores the foodGroup number where O is fruits and vegetables, 1 is grains, 2 is dairy, 3 is protein and 4 is sugars and fats.
   * @return percentage which is the double value of the percentage.
   */ 
  private double calcPercentage(int meal, int foodGroup)
  {
    double percentage=0;
    if (fullness[meal]!=0)
    {
        percentage=foodGroupCount[meal][foodGroup]/(double)fullness[meal]*100;
     }
      return percentage;
  }
  
  /**
   * The getFoodGroupCount method returns the integer foodGroupCount for the specified meal and food group.
   * 
   * @param meal is the integer that stores the meal number where 0 is breakfast, 1 is lunch and 2 is dinner.
   * @param foodGroup is the integer that stores the foodGroup number where O is fruits and vegetables, 1 is grains, 2 is dairy, 3 is protein and 4 is sugars and fats.
   * @return foodGroupCount[][] which is the integer that stores the total nutrient value of a foodGroup consumed for one specific meal. 
   */
  public int getFoodGroupCount(int meal, int foodGroup)
  {
    return foodGroupCount[meal][foodGroup];
  }
  
  /**
   * The setFoodGroupCount method adds nutrientValue to the foodGroupCount for a specific meal and foodGroup.
   * 
   * @param nutrientValue is the integer value that stores how much the food item will fill the critter up.
   * @param meal is the integer that stores the meal number where 0 is breakfast, 1 is lunch and 2 is dinner.
   * @param foodGroup is the integer that stores the foodGroup number where O is fruits and vegetables, 1 is grains, 2 is dairy, 3 is protein and 4 is sugars and fats.
   */
  public void setFoodGroupCount(int nutrientValue,int meal, int foodGroup)
  {
    foodGroupCount[meal][foodGroup]+=nutrientValue;
  }
  
  /**
   * The getStomach method gets the Food stored in the stomach at a specific index. 
   * 
   * @return the Food object that was last fed to the critter.
   */
  public Food getStomach()
  {
    return stomach.get(stomach.size()-1);
  }
  
  /**
   * The addStomach method adds food the the stomach and increments their fullness of a specific meal.
   * 
   * @param food is the Food object to be added to the stomach.
   * @param meal is the integer represetning the meal that the nutrientValue should be added to.
   */
  public void addStomach(Food food, int meal)
  {
    stomach.add(food);
    fullness[meal]+=food.getNutrientValue();
  }
  
  /**
   * The getFullness method gets the integer of the fullness for a specific meal.
   * 
   * @param meal is the integer that stores the meal number where 0 is breakfast, 1 is lunch and 2 is dinner.
   * @return an integer of the fullness of the critter for a specific meal. 
   */
  public int getFullness(int meal)
  {
    return fullness[meal];
  }
  
  /**
   * the getGrowthStage method is used to get the critter's growth stage.
   * 
   * @return growthStage the int variable of the critter's growth stage.
   */
  public int getGrowthStage()
  {
    return growthStage;
  }
  
  /**
   * the setGrowthStage method is used to set the critter's new growth stage.
   * 
   * @param growthStage This is the int number of the new growth stage for the critter.
   */
  public void setGrowthStage(int growthStage)
  {
    this.growthStage = growthStage;
  }
  }